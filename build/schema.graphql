type Deposit @entity(immutable: true) {
  "txHash-txIndex"
  id: ID!
  "account that deposited funds on L1, original address"
  sender: User! # address
  "L2 account"
  receiver: User! # address
  "token being deposited on L1"
  l1Token: Token!
  "amount of token being deposited on L1"
  tokenAmount: BigInt!

  "L1 block timestamp"
  blockTimestamp: BigInt!
  "L1 deposit tx"
  transactionHash: String!
  "L1 block in which deposit is made"
  blockNumber: BigInt!
}

type Withdraw @entity(immutable: true) {
  "txHash-txIndex"
  id: ID!
  "L1 account"
  withdrawer: User! # address
  "token being withdrawn on L1"
  l1Token: Token!
  "amount of token being withdrawn on L1"
  tokenAmount: BigInt!

  "L1 block timestamp"
  blockTimestamp: BigInt!
  "L1 withdraw tx"
  transactionHash: String!
  "L1 block in which withdraw is made"
  blockNumber: BigInt!
}

type Token @entity(immutable: true) {
  "L1 token address"
  id: ID!
  "token name"
  name: String
  "token symbol"
  symbol: String
  "number of decimals"
  decimals: Int
}

type User @entity {
  id: ID!
  sendDeposit: [Deposit!] @deriveFrom(field: "sender")
  receiveDeposit: [Deposit!] @deriveFrom(field: "receiver")
  withdraw: [Withdraw!] @deriveFrom(field: "withdrawer")
}