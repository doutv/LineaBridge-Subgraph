// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BridgingFinalized extends ethereum.Event {
  get params(): BridgingFinalized__Params {
    return new BridgingFinalized__Params(this);
  }
}

export class BridgingFinalized__Params {
  _event: BridgingFinalized;

  constructor(event: BridgingFinalized) {
    this._event = event;
  }

  get nativeToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get bridgedToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get recipient(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class BridgingInitiated extends ethereum.Event {
  get params(): BridgingInitiated__Params {
    return new BridgingInitiated__Params(this);
  }
}

export class BridgingInitiated__Params {
  _event: BridgingInitiated;

  constructor(event: BridgingInitiated) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class CustomContractSet extends ethereum.Event {
  get params(): CustomContractSet__Params {
    return new CustomContractSet__Params(this);
  }
}

export class CustomContractSet__Params {
  _event: CustomContractSet;

  constructor(event: CustomContractSet) {
    this._event = event;
  }

  get nativeToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get customContract(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get setBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class DeploymentConfirmed extends ethereum.Event {
  get params(): DeploymentConfirmed__Params {
    return new DeploymentConfirmed__Params(this);
  }
}

export class DeploymentConfirmed__Params {
  _event: DeploymentConfirmed;

  constructor(event: DeploymentConfirmed) {
    this._event = event;
  }

  get tokens(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get confirmedBy(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class MessageServiceUpdated extends ethereum.Event {
  get params(): MessageServiceUpdated__Params {
    return new MessageServiceUpdated__Params(this);
  }
}

export class MessageServiceUpdated__Params {
  _event: MessageServiceUpdated;

  constructor(event: MessageServiceUpdated) {
    this._event = event;
  }

  get newMessageService(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oldMessageService(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get setBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class NewToken extends ethereum.Event {
  get params(): NewToken__Params {
    return new NewToken__Params(this);
  }
}

export class NewToken__Params {
  _event: NewToken;

  constructor(event: NewToken) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NewTokenDeployed extends ethereum.Event {
  get params(): NewTokenDeployed__Params {
    return new NewTokenDeployed__Params(this);
  }
}

export class NewTokenDeployed__Params {
  _event: NewTokenDeployed;

  constructor(event: NewTokenDeployed) {
    this._event = event;
  }

  get bridgedToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nativeToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferStarted extends ethereum.Event {
  get params(): OwnershipTransferStarted__Params {
    return new OwnershipTransferStarted__Params(this);
  }
}

export class OwnershipTransferStarted__Params {
  _event: OwnershipTransferStarted;

  constructor(event: OwnershipTransferStarted) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RemoteTokenBridgeSet extends ethereum.Event {
  get params(): RemoteTokenBridgeSet__Params {
    return new RemoteTokenBridgeSet__Params(this);
  }
}

export class RemoteTokenBridgeSet__Params {
  _event: RemoteTokenBridgeSet;

  constructor(event: RemoteTokenBridgeSet) {
    this._event = event;
  }

  get remoteTokenBridge(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get setBy(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TokenDeployed extends ethereum.Event {
  get params(): TokenDeployed__Params {
    return new TokenDeployed__Params(this);
  }
}

export class TokenDeployed__Params {
  _event: TokenDeployed;

  constructor(event: TokenDeployed) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class TokenReserved extends ethereum.Event {
  get params(): TokenReserved__Params {
    return new TokenReserved__Params(this);
  }
}

export class TokenReserved__Params {
  _event: TokenReserved;

  constructor(event: TokenReserved) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ERC20Bridge extends ethereum.SmartContract {
  static bind(address: Address): ERC20Bridge {
    return new ERC20Bridge("ERC20Bridge", address);
  }

  bridgedToNativeToken(param0: Address): Address {
    let result = super.call(
      "bridgedToNativeToken",
      "bridgedToNativeToken(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toAddress();
  }

  try_bridgedToNativeToken(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "bridgedToNativeToken",
      "bridgedToNativeToken(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  messageService(): Address {
    let result = super.call("messageService", "messageService():(address)", []);

    return result[0].toAddress();
  }

  try_messageService(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "messageService",
      "messageService():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  nativeToBridgedToken(param0: BigInt, param1: Address): Address {
    let result = super.call(
      "nativeToBridgedToken",
      "nativeToBridgedToken(uint256,address):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );

    return result[0].toAddress();
  }

  try_nativeToBridgedToken(
    param0: BigInt,
    param1: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "nativeToBridgedToken",
      "nativeToBridgedToken(uint256,address):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  pendingOwner(): Address {
    let result = super.call("pendingOwner", "pendingOwner():(address)", []);

    return result[0].toAddress();
  }

  try_pendingOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("pendingOwner", "pendingOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  remoteSender(): Address {
    let result = super.call("remoteSender", "remoteSender():(address)", []);

    return result[0].toAddress();
  }

  try_remoteSender(): ethereum.CallResult<Address> {
    let result = super.tryCall("remoteSender", "remoteSender():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  sourceChainId(): BigInt {
    let result = super.call("sourceChainId", "sourceChainId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_sourceChainId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "sourceChainId",
      "sourceChainId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  targetChainId(): BigInt {
    let result = super.call("targetChainId", "targetChainId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_targetChainId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "targetChainId",
      "targetChainId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenBeacon(): Address {
    let result = super.call("tokenBeacon", "tokenBeacon():(address)", []);

    return result[0].toAddress();
  }

  try_tokenBeacon(): ethereum.CallResult<Address> {
    let result = super.tryCall("tokenBeacon", "tokenBeacon():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall extends ethereum.Call {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class BridgeTokenCall extends ethereum.Call {
  get inputs(): BridgeTokenCall__Inputs {
    return new BridgeTokenCall__Inputs(this);
  }

  get outputs(): BridgeTokenCall__Outputs {
    return new BridgeTokenCall__Outputs(this);
  }
}

export class BridgeTokenCall__Inputs {
  _call: BridgeTokenCall;

  constructor(call: BridgeTokenCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _recipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class BridgeTokenCall__Outputs {
  _call: BridgeTokenCall;

  constructor(call: BridgeTokenCall) {
    this._call = call;
  }
}

export class BridgeTokenWithPermitCall extends ethereum.Call {
  get inputs(): BridgeTokenWithPermitCall__Inputs {
    return new BridgeTokenWithPermitCall__Inputs(this);
  }

  get outputs(): BridgeTokenWithPermitCall__Outputs {
    return new BridgeTokenWithPermitCall__Outputs(this);
  }
}

export class BridgeTokenWithPermitCall__Inputs {
  _call: BridgeTokenWithPermitCall;

  constructor(call: BridgeTokenWithPermitCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _recipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _permitData(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class BridgeTokenWithPermitCall__Outputs {
  _call: BridgeTokenWithPermitCall;

  constructor(call: BridgeTokenWithPermitCall) {
    this._call = call;
  }
}

export class CompleteBridgingCall extends ethereum.Call {
  get inputs(): CompleteBridgingCall__Inputs {
    return new CompleteBridgingCall__Inputs(this);
  }

  get outputs(): CompleteBridgingCall__Outputs {
    return new CompleteBridgingCall__Outputs(this);
  }
}

export class CompleteBridgingCall__Inputs {
  _call: CompleteBridgingCall;

  constructor(call: CompleteBridgingCall) {
    this._call = call;
  }

  get _nativeToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _recipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _chainId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _tokenMetadata(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class CompleteBridgingCall__Outputs {
  _call: CompleteBridgingCall;

  constructor(call: CompleteBridgingCall) {
    this._call = call;
  }
}

export class ConfirmDeploymentCall extends ethereum.Call {
  get inputs(): ConfirmDeploymentCall__Inputs {
    return new ConfirmDeploymentCall__Inputs(this);
  }

  get outputs(): ConfirmDeploymentCall__Outputs {
    return new ConfirmDeploymentCall__Outputs(this);
  }
}

export class ConfirmDeploymentCall__Inputs {
  _call: ConfirmDeploymentCall;

  constructor(call: ConfirmDeploymentCall) {
    this._call = call;
  }

  get _tokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class ConfirmDeploymentCall__Outputs {
  _call: ConfirmDeploymentCall;

  constructor(call: ConfirmDeploymentCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _securityCouncil(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _messageService(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenBeacon(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _sourceChainId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _targetChainId(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _reservedTokens(): Array<Address> {
    return this._call.inputValues[5].value.toAddressArray();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RemoveReservedCall extends ethereum.Call {
  get inputs(): RemoveReservedCall__Inputs {
    return new RemoveReservedCall__Inputs(this);
  }

  get outputs(): RemoveReservedCall__Outputs {
    return new RemoveReservedCall__Outputs(this);
  }
}

export class RemoveReservedCall__Inputs {
  _call: RemoveReservedCall;

  constructor(call: RemoveReservedCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveReservedCall__Outputs {
  _call: RemoveReservedCall;

  constructor(call: RemoveReservedCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetCustomContractCall extends ethereum.Call {
  get inputs(): SetCustomContractCall__Inputs {
    return new SetCustomContractCall__Inputs(this);
  }

  get outputs(): SetCustomContractCall__Outputs {
    return new SetCustomContractCall__Outputs(this);
  }
}

export class SetCustomContractCall__Inputs {
  _call: SetCustomContractCall;

  constructor(call: SetCustomContractCall) {
    this._call = call;
  }

  get _nativeToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _targetContract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetCustomContractCall__Outputs {
  _call: SetCustomContractCall;

  constructor(call: SetCustomContractCall) {
    this._call = call;
  }
}

export class SetDeployedCall extends ethereum.Call {
  get inputs(): SetDeployedCall__Inputs {
    return new SetDeployedCall__Inputs(this);
  }

  get outputs(): SetDeployedCall__Outputs {
    return new SetDeployedCall__Outputs(this);
  }
}

export class SetDeployedCall__Inputs {
  _call: SetDeployedCall;

  constructor(call: SetDeployedCall) {
    this._call = call;
  }

  get _nativeTokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class SetDeployedCall__Outputs {
  _call: SetDeployedCall;

  constructor(call: SetDeployedCall) {
    this._call = call;
  }
}

export class SetMessageServiceCall extends ethereum.Call {
  get inputs(): SetMessageServiceCall__Inputs {
    return new SetMessageServiceCall__Inputs(this);
  }

  get outputs(): SetMessageServiceCall__Outputs {
    return new SetMessageServiceCall__Outputs(this);
  }
}

export class SetMessageServiceCall__Inputs {
  _call: SetMessageServiceCall;

  constructor(call: SetMessageServiceCall) {
    this._call = call;
  }

  get _messageService(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMessageServiceCall__Outputs {
  _call: SetMessageServiceCall;

  constructor(call: SetMessageServiceCall) {
    this._call = call;
  }
}

export class SetRemoteTokenBridgeCall extends ethereum.Call {
  get inputs(): SetRemoteTokenBridgeCall__Inputs {
    return new SetRemoteTokenBridgeCall__Inputs(this);
  }

  get outputs(): SetRemoteTokenBridgeCall__Outputs {
    return new SetRemoteTokenBridgeCall__Outputs(this);
  }
}

export class SetRemoteTokenBridgeCall__Inputs {
  _call: SetRemoteTokenBridgeCall;

  constructor(call: SetRemoteTokenBridgeCall) {
    this._call = call;
  }

  get _remoteTokenBridge(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRemoteTokenBridgeCall__Outputs {
  _call: SetRemoteTokenBridgeCall;

  constructor(call: SetRemoteTokenBridgeCall) {
    this._call = call;
  }
}

export class SetReservedCall extends ethereum.Call {
  get inputs(): SetReservedCall__Inputs {
    return new SetReservedCall__Inputs(this);
  }

  get outputs(): SetReservedCall__Outputs {
    return new SetReservedCall__Outputs(this);
  }
}

export class SetReservedCall__Inputs {
  _call: SetReservedCall;

  constructor(call: SetReservedCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetReservedCall__Outputs {
  _call: SetReservedCall;

  constructor(call: SetReservedCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}
